NUnit Console Runner 3.9.0
Copyright (c) 2018 Charlie Poole, Rob Prouse


NUNIT3-CONSOLE [inputfiles] [options]

Runs a set of NUnit tests from the console.

InputFiles:
      One or more assemblies or test projects of a recognized type.

Options:
      --test=NAMES           Comma-separated list of NAMES of tests to run or
                               explore. This option may be repeated.
      --testlist=PATH        File PATH containing a list of tests to run, one
                               per line. This option may be repeated.
      --where=EXPRESSION     Test selection EXPRESSION indicating what tests
                               will be run. See description below.
      --params, -p=VALUE     Define a test parameter.
      --timeout=MILLISECONDS Set timeout for each test case in MILLISECONDS.
      --seed=SEED            Set the random SEED used to generate test cases.
      --workers=NUMBER       Specify the NUMBER of worker threads to be used
                               in running tests. If not specified, defaults to
                               2 or the number of processors, whichever is
                               greater.
      --stoponerror          Stop run immediately upon any test failure or
                               error.
      --wait                 Wait for input before closing console window.
      --work=PATH            PATH of the directory to use for output files. If
                               not specified, defaults to the current
                               directory.
      --output, --out=PATH   File PATH to contain text output from the tests.
      --result=SPEC          An output SPEC for saving the test results.
                               This option may be repeated.
      --explore[=SPEC]       Display or save test info rather than running
                               tests. Optionally provide an output SPEC for
                               saving the test info. This option may be
                               repeated.
      --noresult             Don't save any test results.
      --labels=VALUE         Specify whether to write test case names to the
                               output. Values: Off, On, Before, After, All
      --test-name-format=VALUE
                             Non-standard naming pattern to use in generating
                               test names.
      --trace=LEVEL          Set internal trace LEVEL.
                               Values: Off, Error, Warning, Info, Verbose (
                               Debug)
      --teamcity             Turns on use of TeamCity service messages.
                               TeamCity engine extension is required.
      --noheader, --noh      Suppress display of program information at start
                               of run.
      --nocolor, --noc       Displays console output without color.
      --help, -h             Display this message and exit.
      --version, -V          Display the header and exit.
      --encoding=VALUE       Specifies the encoding to use for Console
                               standard output, for example utf-8, ascii,
                               unicode.
      --config=NAME          NAME of a project configuration to load (e.g.:
                               Debug).
      --configfile=NAME      NAME of configuration file to use for this run.
      --process=PROCESS      PROCESS isolation for test assemblies.
                               Values: InProcess, Separate, Multiple. If not
                               specified, defaults to Separate for a single
                               assembly or Multiple for more than one.
      --inprocess            Synonym for --process:InProcess
      --domain=DOMAIN        DOMAIN isolation for test assemblies.
                               Values: None, Single, Multiple. If not
                               specified, defaults to Single for a single
                               assembly or Multiple for more than one.
      --framework=FRAMEWORK  FRAMEWORK type/version to use for tests.
                               Examples: mono, net-3.5, v4.0, 2.0, mono-4.0.
                               If not specified, tests will run under the
                               framework they are compiled with.
      --x86                  Run tests in an x86 process on 64 bit systems
      --dispose-runners      Dispose each test runner after it has finished
                               running its tests.
      --shadowcopy           Shadow copy test files
      --loaduserprofile      Load user profile in test runner processes
      --skipnontestassemblies
                             Skip any non-test assemblies specified, without
                               error.
      --agents=NUMBER        Specify the maximum NUMBER of test assembly
                               agents to run at one time. If not specified,
                               there is no limit.
      --debug                Launch debugger to debug tests.
      --pause                Pause before running to allow attaching a
                               debugger.
      --list-extensions      List all extension points and the extensions for
                               each.
      --set-principal-policy=VALUE
                             Set PrincipalPolicy for the test domain.

Description:
      By default, this command runs the tests contained in the
      assemblies and projects specified. If the --explore option
      is used, no tests are executed but a description of the tests
      is saved in the specified or default format.

      The --where option is intended to extend or replace the earlier
      --test, --include and --exclude options by use of a selection expression
      describing exactly which tests to use. Examples of usage are:
          --where:cat==Data
          --where "method =~ /DataTest*/ && cat = Slow"

      Care should be taken in combining --where with --test or --testlist.
      The test and where specifications are implicitly joined using &&, so
      that BOTH sets of criteria must be satisfied in order for a test to run.
      See the docs for more information and a full description of the syntax
      information and a full description of the syntax.

      Several options that specify processing of XML output take
      an output specification as a value. A SPEC may take one of
      the following forms:
          --OPTION:filename
          --OPTION:filename;format=formatname
          --OPTION:filename;transform=xsltfile

      The --result option may use any of the following formats:
          nunit3 - the native XML format for NUnit 3
          nunit2 - legacy XML format used by earlier releases of NUnit
                   Requires the engine extension NUnitV2ResultWriter.

      The --explore option may use any of the following formats:
          nunit3 - the native XML format for NUnit 3
          cases  - a text file listing the full names of all test cases.
      If --explore is used without any specification following, a list of
      test cases is output to the writer.

      If none of the options {--result, --explore, --noresult} is used,
      NUnit saves the results to TestResult.xml in nunit3 format.

      Any transforms provided must handle input in the native nunit3 format.

      To be able to load NUnit projects, file type .nunit, the engine
      extension NUnitProjectLoader is required. For Visual Studio projects
      and solutions the engine extension VSProjectLoader is required.

