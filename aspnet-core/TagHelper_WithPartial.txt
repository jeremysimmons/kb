https://stackoverflow.com/a/35298897/26877

3:07 PM 6/7/2017
This solution is for the RCx version, but doesn't work in the RTM of .NET Core. viewResult.View is always null.

[ViewContext]
public ViewContext ViewContext { get; set; }

public async override void Process(TagHelperContext context, TagHelperOutput output)
{
   var sw = new StringWriter();
   // Create a new viewData (viewbag). This will be used in a new ViewContext to define the model we want
   ViewDataDictionary viewData = new ViewDataDictionary(ViewContext.ViewData, For.Model);
   // Generate a viewContext with our viewData
   var viewContext = new ViewContext(ViewContext, ViewContext.View, viewData, ViewContext.TempData, sw, new HtmlHelperOptions());
   // Use the viewContext to run the given ViewName
   output.Content.Append(new HtmlString(await viewContext.RenderPartialView(ViewName)));
}
public async static Task<string> RenderPartialView(this ViewContext context, string viewName, ICompositeViewEngine viewEngine = null, ViewEngineResult viewResult = null)
{
   viewEngine = viewEngine ?? context.HttpContext.RequestServices.GetRequiredService<ICompositeViewEngine>();
   viewResult = viewResult ?? viewEngine.FindPartialView(context, viewName);
   await viewResult.View.RenderAsync(context);
   return context.Writer.ToString();
}
