Startup.cs
                options.ValueProviderFactories.Add(new CustomCookieValueProviderFactory());

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using Microsoft.Extensions.Primitives;

namespace Disciplr.Mvc.ModelBinding
{
    public class CustomCookieValueProviderFactory : IValueProviderFactory
    {
        public Task CreateValueProviderAsync(ValueProviderFactoryContext context)
        {
            if (context == null)
            {
                throw new ArgumentNullException(nameof(context));
            }
            context.ValueProviders.Add(new CustomCookieValueProvider(context.ActionContext.HttpContext));
            return Task.CompletedTask;
        }
    }

    public class CustomCookieValueProvider : IValueProvider
    {
        private readonly HttpContext _context;

        public CustomCookieValueProvider(HttpContext context)
        {
            _context = context;
        }

        public bool ContainsPrefix(string prefix)
        {
            return _context.Request.Cookies[prefix] != null;
        }

        public ValueProviderResult GetValue(string key)
        {
            return new ValueProviderResult(new StringValues(_context.Request.Cookies[key]));
        }
    }

}
