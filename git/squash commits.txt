git checkout -b squashed_feature
This way, if you screw up, you can go back to your original branch, make another branch for squashing and try again.

To squash all commits since you branched away from master, do

COPY
git rebase -i master
Note that rebasing to the master does not work if you merged the master into your feature branch while you were working on the new feature. If you did this you will need to find the original branch point and call git rebase with a SHA1 revision.

Your editor will open with a file like

COPY
pick fda59df commit 1
pick x536897 commit 2
pick c01a668 commit 3
Each line represents a commit (in chronological order, the latest commit will be at the bottom).

To transform all these commits into a single one, change the file to this:

COPY
pick fda59df commit 1
squash x536897 commit 2
squash c01a668 commit 3